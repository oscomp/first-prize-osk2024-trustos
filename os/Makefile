# Building
TARGET := riscv64gc-unknown-none-elf
MODE := release
KERNEL_ELF := target/$(TARGET)/$(MODE)/os
KERNEL_BIN := $(KERNEL_ELF).bin

# BOARD
BOOTLOADER := ../bootloader/rustsbi-k210.bin
K210_BOOTLOADER_SIZE := 131072

BOARD ?= qemu

# Run K210
#K210-SERIALPORT	= /dev/ttyUSB0
#K210-BURNER	= ../tools/kflash.py

# Binutils
OBJCOPY := rust-objcopy --binary-architecture=riscv64

build: env initproc $(KERNEL_BIN) 


initproc:
	@cd ../user && make build


env:
	rustup target add $(TARGET)
#	cargo install cargo-binutils --vers =0.3.3
#	rustup component add rust-src
	rustup component add llvm-tools-preview

$(KERNEL_BIN): kernel
	@$(OBJCOPY) $(KERNEL_ELF) --strip-all -O binary $@


kernel:
	@cargo clean
	@echo Platform: $(BOARD)
	@cp src/linker-$(BOARD).ld src/linker.ld
	@cargo build --release 
	@rm src/linker.ld


run: run-inner

copy_to_fs: 
	@cd ../simple-fat32 \
	&& sh ./create_img.sh \
	&& sudo mkdir fs \
	&& sudo mount fat32.img fs \
	&& sudo cp ../user/bin/* fs/ \
	&& sudo umount fs \
	&& sudo rmdir fs

run-inner: build copy_to_fs
	@qemu-system-riscv64 \
		-machine virt \
		-nographic \
		-bios ../bootloader/rustsbi-qemu.bin \
		-device loader,file=$(KERNEL_BIN),addr=0x80200000 \
		-drive file=../simple-fat32/fat32.img,if=none,format=raw,id=x0 \
        -device virtio-blk-device,drive=x0,bus=virtio-mmio-bus.0

.PHONY: build env kernel
